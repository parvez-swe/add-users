{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Md Parvez Musharaf\\\\Desktop\\\\MERNSTACK\\\\parctice-a-full-project\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Card from '../UI/Card';\nimport classes from './AddUser.module.css';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\nimport Wrapper from '../Helpers/Wrapper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredUserAge = ageInputRef.current.value;\n\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a valid name and age (non-empty-values).'\n      });\n      return;\n    }\n\n    if (+enteredUserAge < 1) {\n      setError({\n        title: 'Invalid age',\n        message: 'Please enter a valid age (>0).'\n      });\n      return;\n    }\n\n    props.onAddUser(enteredName, enteredUserAge);\n    nameInputRef.current.value = '';\n    ageInputRef.current.value = '';\n  };\n\n  const ErrorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: ErrorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age \",\n          children: \"Age(year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddUser, \"oeh9P4do1L6ON2Ex+93ODUUduFk=\");\n\n_c = AddUser;\nexport default AddUser; //(erro && }if error is occured then Error will be execute\n//   <div>\n//     {error && (\n//     <ErrorModal \n//     title={error.title} \n//     message={error.message}\n//     onConfirm = {ErrorHandler}\n//     />\n//     )}\n//there we can make \"className\" as we want. it's work also as props. which we\n//     can access from other component.\n//     <Card className={classes.input}>\n//every input generally get as string.for safe for compare as number we use +enteredAge\n// if(+enteredAge < 1){\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","useRef","Card","classes","Button","ErrorModal","Wrapper","AddUser","props","nameInputRef","ageInputRef","error","setError","addUserHandler","event","preventDefault","enteredName","current","value","enteredUserAge","trim","length","title","message","onAddUser","ErrorHandler","input"],"sources":["C:/Users/Md Parvez Musharaf/Desktop/MERNSTACK/parctice-a-full-project/src/components/Users/AddUser.js"],"sourcesContent":["import React, {useState, useRef} from 'react';\r\nimport Card from '../UI/Card';\r\nimport classes from './AddUser.module.css';\r\nimport Button from '../UI/Button';\r\nimport ErrorModal from '../UI/ErrorModal';\r\nimport Wrapper from '../Helpers/Wrapper';\r\n\r\nconst AddUser = (props) =>{\r\n      const nameInputRef = useRef();\r\n      const ageInputRef = useRef();\r\n\r\n\r\n\r\n      const [error, setError] = useState();\r\n\r\n      const addUserHandler =(event)=>{\r\n            event.preventDefault();\r\n            const enteredName = (nameInputRef.current.value);\r\n            const enteredUserAge = ageInputRef.current.value;\r\n\r\n            if(enteredName.trim().length === 0 || enteredUserAge.trim().length === 0){\r\n                  setError({\r\n                        title:'Invalid input',\r\n                        message: 'Please enter a valid name and age (non-empty-values).'\r\n                  })\r\n                  return;\r\n            }\r\n            if(+enteredUserAge < 1){\r\n                  setError({\r\n                        title: 'Invalid age',\r\n                        message: 'Please enter a valid age (>0).'\r\n                  })\r\n                  return;\r\n            }\r\n            props.onAddUser(enteredName, enteredUserAge);\r\n            nameInputRef.current.value ='';\r\n            ageInputRef.current.value ='';\r\n\r\n      }\r\n\r\n      const ErrorHandler = () =>{\r\n            setError(null);\r\n      } \r\n      return (\r\n        <Wrapper>\r\n          {error && (\r\n            <ErrorModal\r\n              title={error.title}\r\n              message={error.message}\r\n              onConfirm={ErrorHandler}\r\n            />\r\n          )}\r\n\r\n          <Card className={classes.input}>\r\n            <form onSubmit={addUserHandler}>\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                id=\"username\"\r\n                type=\"text\"\r\n\r\n                ref ={nameInputRef}\r\n              />\r\n              <label htmlFor=\"age \">Age(year)</label>\r\n              <input\r\n                id=\"age\"\r\n                type=\"number\"\r\n\r\n                ref ={ageInputRef}\r\n              />\r\n              <Button type=\"submit\">Add User</Button>\r\n            </form>\r\n          </Card>\r\n        </Wrapper>\r\n      );\r\n}\r\n\r\nexport default AddUser;\r\n\r\n//(erro && }if error is occured then Error will be execute\r\n\r\n      //   <div>\r\n      //     {error && (\r\n      //     <ErrorModal \r\n      //     title={error.title} \r\n      //     message={error.message}\r\n      //     onConfirm = {ErrorHandler}\r\n      //     />\r\n      //     )}\r\n\r\n          //there we can make \"className\" as we want. it's work also as props. which we\r\n      //     can access from other component.\r\n      //     <Card className={classes.input}>\r\n\r\n                  //every input generally get as string.for safe for compare as number we use +enteredAge\r\n            // if(+enteredAge < 1){\r\n\r\n      "],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAU;EAAA;;EACpB,MAAMC,YAAY,GAAGR,MAAM,EAA3B;EACA,MAAMS,WAAW,GAAGT,MAAM,EAA1B;EAIA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;;EAEA,MAAMa,cAAc,GAAGC,KAAD,IAAS;IACzBA,KAAK,CAACC,cAAN;IACA,MAAMC,WAAW,GAAIP,YAAY,CAACQ,OAAb,CAAqBC,KAA1C;IACA,MAAMC,cAAc,GAAGT,WAAW,CAACO,OAAZ,CAAoBC,KAA3C;;IAEA,IAAGF,WAAW,CAACI,IAAZ,GAAmBC,MAAnB,KAA8B,CAA9B,IAAmCF,cAAc,CAACC,IAAf,GAAsBC,MAAtB,KAAiC,CAAvE,EAAyE;MACnET,QAAQ,CAAC;QACHU,KAAK,EAAC,eADH;QAEHC,OAAO,EAAE;MAFN,CAAD,CAAR;MAIA;IACL;;IACD,IAAG,CAACJ,cAAD,GAAkB,CAArB,EAAuB;MACjBP,QAAQ,CAAC;QACHU,KAAK,EAAE,aADJ;QAEHC,OAAO,EAAE;MAFN,CAAD,CAAR;MAIA;IACL;;IACDf,KAAK,CAACgB,SAAN,CAAgBR,WAAhB,EAA6BG,cAA7B;IACAV,YAAY,CAACQ,OAAb,CAAqBC,KAArB,GAA4B,EAA5B;IACAR,WAAW,CAACO,OAAZ,CAAoBC,KAApB,GAA2B,EAA3B;EAEL,CAvBD;;EAyBA,MAAMO,YAAY,GAAG,MAAK;IACpBb,QAAQ,CAAC,IAAD,CAAR;EACL,CAFD;;EAGA,oBACE,QAAC,OAAD;IAAA,WACGD,KAAK,iBACJ,QAAC,UAAD;MACE,KAAK,EAAEA,KAAK,CAACW,KADf;MAEE,OAAO,EAAEX,KAAK,CAACY,OAFjB;MAGE,SAAS,EAAEE;IAHb;MAAA;MAAA;MAAA;IAAA,QAFJ,eASE,QAAC,IAAD;MAAM,SAAS,EAAEtB,OAAO,CAACuB,KAAzB;MAAA,uBACE;QAAM,QAAQ,EAAEb,cAAhB;QAAA,wBACE;UAAO,OAAO,EAAC,UAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,EAAE,EAAC,UADL;UAEE,IAAI,EAAC,MAFP;UAIE,GAAG,EAAGJ;QAJR;UAAA;UAAA;UAAA;QAAA,QAFF,eAQE;UAAO,OAAO,EAAC,MAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QARF,eASE;UACE,EAAE,EAAC,KADL;UAEE,IAAI,EAAC,QAFP;UAIE,GAAG,EAAGC;QAJR;UAAA;UAAA;UAAA;QAAA,QATF,eAeE,QAAC,MAAD;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAfF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA+BL,CAnED;;GAAMH,O;;KAAAA,O;AAqEN,eAAeA,OAAf,C,CAEA;AAEM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;AACJ;AACA;AAEY;AACN"},"metadata":{},"sourceType":"module"}