{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Md Parvez Musharaf\\\\Desktop\\\\MERNSTACK\\\\parctice-a-full-project\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Card from '../UI/Card';\nimport classes from './AddUser.module.css';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredUsername, setEnteredUserName] = useState('');\n  const [enteredAge, setEnteredAge] = useState('');\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault();\n\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a valid name and age (non-empty-values).'\n      });\n      return;\n    }\n\n    if (+enteredAge < 1) {\n      setError({\n        title: 'Invalid age',\n        message: 'Please enter a valid age (>0).'\n      });\n      return;\n    }\n\n    props.onAddUser(enteredUsername, enteredAge);\n    setEnteredUserName('');\n    setEnteredAge('');\n  };\n\n  const UsernameChangeHandler = event => {\n    setEnteredUserName(event.target.value);\n  };\n\n  const AgeChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n\n  const ErrorHandler = () => {\n    setError(null);\n  };\n\n  return [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n    title: error.title,\n    message: error.message,\n    onConfirm: ErrorHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 11\n  }, this), /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addUserHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        value: enteredUsername,\n        onChange: UsernameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age \",\n        children: \"Age(year)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"age\",\n        type: \"number\",\n        value: enteredAge,\n        onChange: AgeChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 11\n  }, this)];\n};\n\n_s(AddUser, \"pkKneK40C46E40x4NottHcr/rLY=\");\n\n_c = AddUser;\nexport default AddUser; //(erro && }if error is occured then Error will be execute\n//   <div>\n//     {error && (\n//     <ErrorModal \n//     title={error.title} \n//     message={error.message}\n//     onConfirm = {ErrorHandler}\n//     />\n//     )}\n//there we can make \"className\" as we want. it's work also as props. which we\n//     can access from other component.\n//     <Card className={classes.input}>\n//every input generally get as string.for safe for compare as number we use +enteredAge\n// if(+enteredAge < 1){\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["React","useState","Card","classes","Button","ErrorModal","AddUser","props","enteredUsername","setEnteredUserName","enteredAge","setEnteredAge","error","setError","addUserHandler","event","preventDefault","trim","length","title","message","onAddUser","UsernameChangeHandler","target","value","AgeChangeHandler","ErrorHandler","input"],"sources":["C:/Users/Md Parvez Musharaf/Desktop/MERNSTACK/parctice-a-full-project/src/components/Users/AddUser.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Card from '../UI/Card';\r\nimport classes from './AddUser.module.css';\r\nimport Button from '../UI/Button';\r\nimport ErrorModal from '../UI/ErrorModal';\r\n\r\nconst AddUser = (props) =>{\r\n      const [enteredUsername, setEnteredUserName] = useState('');\r\n      const [enteredAge,setEnteredAge] = useState('')\r\n\r\n      const [error, setError] = useState();\r\n\r\n      const addUserHandler =(event)=>{\r\n            event.preventDefault();\r\n            if(enteredUsername.trim().length === 0 || enteredAge.trim().length === 0){\r\n                  setError({\r\n                        title:'Invalid input',\r\n                        message: 'Please enter a valid name and age (non-empty-values).'\r\n                  })\r\n                  return;\r\n            }\r\n            if(+enteredAge < 1){\r\n                  setError({\r\n                        title: 'Invalid age',\r\n                        message: 'Please enter a valid age (>0).'\r\n                  })\r\n                  return;\r\n            }\r\n            props.onAddUser(enteredUsername, enteredAge);\r\n            setEnteredUserName('');\r\n            setEnteredAge('');\r\n\r\n      }\r\n\r\n      const UsernameChangeHandler =(event)=>{\r\n            setEnteredUserName(event.target.value)\r\n      }\r\n      const AgeChangeHandler =(event) =>{\r\n            setEnteredAge(event.target.value)\r\n      }\r\n\r\n      const ErrorHandler = () =>{\r\n            setError(null);\r\n      } \r\n      return (\r\n        [\r\n          error && (\r\n          <ErrorModal \r\n          title={error.title} \r\n          message={error.message}\r\n          onConfirm = {ErrorHandler}\r\n          />\r\n          ),\r\n      \r\n          <Card className={classes.input}>\r\n            <form onSubmit={addUserHandler}>\r\n              <label htmlFor=\"username\">Username</label>\r\n              <input\r\n                id=\"username\"\r\n                type=\"text\"\r\n                value={enteredUsername}\r\n                onChange={UsernameChangeHandler}\r\n              />\r\n              <label htmlFor=\"age \">Age(year)</label>\r\n              <input\r\n                id=\"age\"\r\n                type=\"number\"\r\n                value={enteredAge}\r\n                onChange={AgeChangeHandler}\r\n              />\r\n              <Button type=\"submit\">Add User</Button>\r\n            </form>\r\n          </Card>\r\n        ]\r\n      );\r\n}\r\n\r\nexport default AddUser;\r\n\r\n//(erro && }if error is occured then Error will be execute\r\n\r\n      //   <div>\r\n      //     {error && (\r\n      //     <ErrorModal \r\n      //     title={error.title} \r\n      //     message={error.message}\r\n      //     onConfirm = {ErrorHandler}\r\n      //     />\r\n      //     )}\r\n\r\n          //there we can make \"className\" as we want. it's work also as props. which we\r\n      //     can access from other component.\r\n      //     <Card className={classes.input}>\r\n\r\n                  //every input generally get as string.for safe for compare as number we use +enteredAge\r\n            // if(+enteredAge < 1){\r\n\r\n      "],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAU;EAAA;;EACpB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;EACA,MAAM,CAACS,UAAD,EAAYC,aAAZ,IAA6BV,QAAQ,CAAC,EAAD,CAA3C;EAEA,MAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;;EAEA,MAAMa,cAAc,GAAGC,KAAD,IAAS;IACzBA,KAAK,CAACC,cAAN;;IACA,IAAGR,eAAe,CAACS,IAAhB,GAAuBC,MAAvB,KAAkC,CAAlC,IAAuCR,UAAU,CAACO,IAAX,GAAkBC,MAAlB,KAA6B,CAAvE,EAAyE;MACnEL,QAAQ,CAAC;QACHM,KAAK,EAAC,eADH;QAEHC,OAAO,EAAE;MAFN,CAAD,CAAR;MAIA;IACL;;IACD,IAAG,CAACV,UAAD,GAAc,CAAjB,EAAmB;MACbG,QAAQ,CAAC;QACHM,KAAK,EAAE,aADJ;QAEHC,OAAO,EAAE;MAFN,CAAD,CAAR;MAIA;IACL;;IACDb,KAAK,CAACc,SAAN,CAAgBb,eAAhB,EAAiCE,UAAjC;IACAD,kBAAkB,CAAC,EAAD,CAAlB;IACAE,aAAa,CAAC,EAAD,CAAb;EAEL,CApBD;;EAsBA,MAAMW,qBAAqB,GAAGP,KAAD,IAAS;IAChCN,kBAAkB,CAACM,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAAlB;EACL,CAFD;;EAGA,MAAMC,gBAAgB,GAAGV,KAAD,IAAU;IAC5BJ,aAAa,CAACI,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAAb;EACL,CAFD;;EAIA,MAAME,YAAY,GAAG,MAAK;IACpBb,QAAQ,CAAC,IAAD,CAAR;EACL,CAFD;;EAGA,OACE,CACED,KAAK,iBACL,QAAC,UAAD;IACA,KAAK,EAAEA,KAAK,CAACO,KADb;IAEA,OAAO,EAAEP,KAAK,CAACQ,OAFf;IAGA,SAAS,EAAIM;EAHb;IAAA;IAAA;IAAA;EAAA,QAFF,eASE,QAAC,IAAD;IAAM,SAAS,EAAEvB,OAAO,CAACwB,KAAzB;IAAA,uBACE;MAAM,QAAQ,EAAEb,cAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,UAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,EAAE,EAAC,UADL;QAEE,IAAI,EAAC,MAFP;QAGE,KAAK,EAAEN,eAHT;QAIE,QAAQ,EAAEc;MAJZ;QAAA;QAAA;QAAA;MAAA,QAFF,eAQE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QARF,eASE;QACE,EAAE,EAAC,KADL;QAEE,IAAI,EAAC,QAFP;QAGE,KAAK,EAAEZ,UAHT;QAIE,QAAQ,EAAEe;MAJZ;QAAA;QAAA;QAAA;MAAA,QATF,eAeE,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAfF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QATF,CADF;AA+BL,CArED;;GAAMnB,O;;KAAAA,O;AAuEN,eAAeA,OAAf,C,CAEA;AAEM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI;AACJ;AACA;AAEY;AACN"},"metadata":{},"sourceType":"module"}